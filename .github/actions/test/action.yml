name:
  Run Doctests and Pytest

description:
  Run pytest, and run the doctest runner (shapefile.py as a script).

inputs:
  extra_args:
    description: Extra command line args for Pytest and python shapefile.py
    default: '-m "not network"'
    required: false
  replace_remote_urls_with_localhost:
    description: yes or no.  Test loading shapefiles from a url, without overloading an external server from 30 parallel workflows.
    default: 'no'
    required: false
  pyshp_repo_directory:
    description: Path to where the PyShp repo was checked out to (to keep separate from Shapefiles & artefacts repo).
    required: false
    default: '.'



runs:
  using: "composite"
  steps:
    # The PyShp repo is required to already be checked out into pyshp_repo_directory,
    # and the wheel to be tested in ./dist within it.
    # e.g. by the calling workflow using:
    # steps:
    # - uses: actions/checkout@v4
    #   with:
    #     path: ./Pyshp
    #
    # - name: Build distribution artefacts (wheel and sdist)
    #   uses: ./Pyshp/.github/actions/build_wheel_and_sdist
    #
    # and then calling this Action with:
    #
    # - name: Run tests
    #   uses: ./Pyshp/.github/actions/test
    #   with:
    #     extra_args: ""
    #     replace_remote_urls_with_localhost: 'yes'
    #     pyshp_repo_directory: ./Pyshp

    # The Python to be tested with is required to already be setup,
    # with "python" and "pip" on the system Path
    # (so that this custom Action can be used with both reproducible
    #  Pythons from Python docker images, and more frequently deprecated Pythons
    #  from - uses: actions/setup-python@v5)


    - name: Checkout shapefiles and zip file artefacts repo
      if: ${{ inputs.replace_remote_urls_with_localhost == 'yes' }}
      uses: actions/checkout@v4
      with:
        repository: JamesParrott/PyShp_test_shapefile
        path: ./PyShp_test_shapefile

    - name: Serve shapefiles and zip file artefacts on localhost
      if: ${{ inputs.replace_remote_urls_with_localhost == 'yes' }}
      shell: bash
      working-directory: ./PyShp_test_shapefile
      run: |
        python -m http.server 8000 &
        echo "HTTP_SERVER_PID=$!" >> $GITHUB_ENV
        sleep 4  # give server time to start

    - name: Doctests
      shell: bash
      working-directory: ${{ inputs.pyshp_repo_directory }}
      env:
        REPLACE_REMOTE_URLS_WITH_LOCALHOST: ${{ inputs.replace_remote_urls_with_localhost }}
      run: python shapefile.py ${{ inputs.extra_args }}


    - name: Download wheel and sdist (built in previous jobs)
      uses: actions/download-artifact@v4
      with:
        name: PyShp_wheel_and_sdist
        path: dist

    - name: Install PyShp from the wheel (built in prev step)
      shell: bash
      working-directory: dist/
      run: |
        WHEEL_NAME=$(ls pyshp-*py3-none-any.whl)
        python -m pip install $WHEEL_NAME[test]

    - name: Show Python and Pytest versions for logs.
      shell: bash
      run: |
        python --version
        python -m pytest --version

    - name: Run Pytest
      shell: bash
      working-directory: ${{ inputs.pyshp_repo_directory }}
      env:
        REPLACE_REMOTE_URLS_WITH_LOCALHOST: ${{ inputs.replace_remote_urls_with_localhost }}
      run: |
        echo "Ensure the tests import the installed wheel"
        mv shapefile.py __tmp.py
        pytest -rA --tb=short ${{ inputs.extra_args }}
        mv __tmp.py shapefile.py



    # - name: Test http server
    #   # (needs a full Github Actions runner or a Python non-slim Docker image,
    #   # as the slim Debian images don't have curl or wget).
    #   if: ${{ inputs.replace_remote_urls_with_localhost == 'yes' }}
    #   shell: bash
    #   run: curl http://localhost:8000/ne_110m_admin_0_tiny_countries.shp

    - name: Stop http server
      if: ${{ inputs.replace_remote_urls_with_localhost == 'yes' }}
      shell: bash
      run: |
        echo Killing http server process ID: ${{ env.HTTP_SERVER_PID }}
        kill ${{ env.HTTP_SERVER_PID }}