[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pyshp"
authors = [
    {name = "Joel Lawhead", email = "jlawhead@geospatialpython.com"},
]
maintainers = [
    {name = "Karim Bahgat", email = "karim.bahgat.norway@gmail.com"}
]
readme = "README.md"
keywords = ["gis", "geospatial", "geographic", "shapefile", "shapefiles"]
description = "Pure Python read/write support for ESRI Shapefile format"
license = "MIT"
license-files = ["LICENSE.TXT"]
dynamic = ["version"]
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.optional-dependencies]
test = ["pytest"]

[project.urls]
Repository = "https://github.com/GeospatialPython/pyshp"

[tool.hatch.build.targets.sdist]
only-include = ["src", "shapefiles", "test_shapefile.py"]

[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = {"src" = ""}  # move from "src" directory for wheel

[tool.hatch.version]
path = "src/shapefile.py"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"


[tool.pylint.MASTER]
load-plugins=[
    "pylint_per_file_ignores",
]

# Silence warning: src/shapefile.py:2076:20: W0212: Access to a protected
#                  member _from_geojson of a client class (protected-access)
#                  src/shapefile.py:950:16: W0201: Attribute 'm' defined outside __init__ (attribute-defined-outside-init)
#                  src/shapefile.py:973:12: W0707: Consider explicitly re-raising using 'except error as exc' and
#                                                  'raise ShapefileException(f'Failed to write bounding box for record {i}.
#                                                   Expected floats.') from exc' (raise-missing-from)
# Silence remarks:
# src\shapefile.py:338:0: R0914: Too many local variables (21/15) (too-many-locals)
# src\shapefile.py:338:0: R0912: Too many branches (24/12) (too-many-branches)
# src\shapefile.py:338:0: R0915: Too many statements (52/50) (too-many-statements)
# src\shapefile.py:470:0: R0902: Too many instance attributes (9/7) (too-many-instance-attributes)
# src\shapefile.py:471:4: R0913: Too many arguments (6/5) (too-many-arguments)
# src\shapefile.py:471:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
# src\shapefile.py:506:4: R0911: Too many return statements (10/6) (too-many-return-statements)
# src\shapefile.py:878:0: R0903: Too few public methods (0/2) (too-few-public-methods)
# src\shapefile.py:1981:0: R0904: Too many public methods (23/20) (too-many-public-methods)
# src\shapefile.py:2117:17: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
# Silence warnings: test_shapefile.py:{783,786,799,803,06,1195}:19:
#                   W0212: Access to a protected member _offsets of a
#                   client class (protected-access)
#
# Toml multi-line string used instead of array due to:
# https://github.com/christopherpickering/pylint-per-file-ignores/issues/160
[tool.pylint.'messages control']
per-file-ignores = [
    "/src/shapefile.py:W0707,W0212,W0201,R0902,R0903,R0904,R0911,R0912,R0913,R0914,R0915,R0917,R1732",
    "test_shapefile.py:W0212,R1732",
]
